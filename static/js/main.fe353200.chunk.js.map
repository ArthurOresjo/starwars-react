{"version":3,"sources":["components/SwapiData.jsx","App.js","reportWebVitals.js","index.js"],"names":["Content","styled","div","Buttons","button","DisplayContainer","Searchbar","SearchResult","Inputfield","input","Text","p","SwapiData","useState","apiData","setApiData","searchValue","setSearchValue","showForm","setShowform","favorite","setFavorite","rawData","filteredData","name","setName","birth_year","setBirthYear","eye_color","setEyeColor","getData","a","apiUrl","hasMorePages","fetch","response","json","next","replace","results","map","obj","push","filterData","filter","item","toLowerCase","includes","addFavorite","model","favoritesData","elements","result","index","onClick","favorites","removeFavorite","buttonText","onKeyPress","event","key","value","onChange","e","target","type","placeholder","htmlFor","required","id","disabled","length","Header","Apps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe353200.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Content = styled.div`\r\n    font-weight: 700;\r\n    margin: 1em;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    height: 1.5em;\r\n    width: 50vw;\r\n    font-family: 'Bangers', cursive;\r\n    font-size: 25px;\r\n    `\r\nconst Buttons = styled.button`\r\n    background-color: black;\r\n    font-family: 'Bangers', cursive;\r\n    color: gold;\r\n    width: 10rem;\r\n    height: 3rem;\r\n    margin: 1rem;\r\n    font-size: 20px;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        transform: scale(1.1);\r\n  }\r\n`\r\nconst DisplayContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`\r\nconst Searchbar = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`\r\nconst SearchResult = styled.div`\r\n  display: flex;\r\n  flex-direction:column;\r\n  padding: 1.5em;\r\n  margin: 1em;\r\n  border: 1px solid black;\r\n  background-color: rgba(88, 83, 6, 0.534);\r\n  border-radius: 5px;\r\n  font-family: 'Bangers', cursive;\r\n\r\n  &:hover{\r\n      background-color: black;\r\n      color:gold;\r\n  }\r\n`\r\nconst Inputfield = styled.input`\r\n  height: 2rem;\r\n  justify-content: center;\r\n  margin: 1rem;\r\n  border: 3px solid black;\r\n  background-color:lightgrey;\r\n`\r\nconst Text = styled.p`\r\n    color: #6d2509;\r\n`\r\n\r\nconst SwapiData = () => {\r\n    const [apiData, setApiData] = useState([]);\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [showForm, setShowform] = useState(false)\r\n    let favoritesData = [];\r\n    const [favorite, setFavorite] = useState(favoritesData)\r\n    let rawData = [];\r\n    let filteredData = [];\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [birth_year, setBirthYear] = useState(\"\")\r\n    const [eye_color, setEyeColor] = useState(\"\")\r\n\r\n\r\n    async function getData() {\r\n        // let nextUrl = \"1\";\r\n        // let apiUrl = `https://swapi.dev/api/people/?page=${nextUrl}`;\r\n        let apiUrl = `https://swapi.dev/api/people/?page=1`;\r\n        let hasMorePages = true;\r\n\r\n        while (hasMorePages) {\r\n            const response = await fetch(apiUrl);\r\n            const json = await response.json();\r\n            if (!json.next) hasMorePages = false;\r\n            if (hasMorePages) {\r\n                apiUrl = json.next.replace(\"http\", \"https\");\r\n                json.results.map((obj) => {\r\n                    return rawData.push(obj)\r\n                })\r\n            }\r\n        }\r\n        filterData();\r\n    };\r\n\r\n\r\n    function filterData() {\r\n        filteredData = [...rawData];\r\n        filteredData = filteredData.filter(item => {\r\n            if (item.name.toLowerCase().includes(searchValue)) return true;\r\n            else if (item.birth_year.toLowerCase().includes(searchValue)) return true;\r\n            else if (item.eye_color.toLowerCase().includes(searchValue)) return true;\r\n            else return false;\r\n        })\r\n        return setApiData(filteredData);\r\n    };\r\n    function enterKeyPressed(event) {\r\n        if (event.key === \"Enter\") {\r\n            getData();\r\n        }\r\n    }\r\n    function addFavorite(item) {\r\n        let model = {\r\n            name: item.name,\r\n            birth_year: item.birth_year,\r\n            eye_color: item.eye_color\r\n        }\r\n        setFavorite(favoritesData => [...favoritesData, model])\r\n    };\r\n    function removeFavorite(item) {\r\n        setFavorite(favorite.filter(favorite => favorite.name !== item.name))\r\n    }\r\n    function buildFavorite() {\r\n        let model = {\r\n            name: name,\r\n            birth_year: birth_year,\r\n            eye_color: eye_color\r\n        }\r\n        addFavorite(model)\r\n    }\r\n    let spanText = \"\";\r\n    const elements = apiData.map((result, index) => {\r\n        return (\r\n            <SearchResult key={result.name + index}>\r\n                <p>Name : {result.name}</p>\r\n                <span onClick={() => addFavorite(result)}>{spanText}\r\n                </span>\r\n                <p >Eye color : <span>{result.eye_color}</span></p>\r\n                <p >Birth year : <span>{result.birth_year}</span></p>\r\n            </SearchResult>\r\n        )\r\n    })\r\n\r\n    const favorites = favorite.map((item) => {\r\n        return (\r\n            <SearchResult key={item.name}>\r\n                <Text>Name : {item.name}</Text>\r\n                <span onClick={() => removeFavorite(item)}>\r\n                </span>\r\n                <Text>Eye color : <span>{item.eye_color}</span></Text>\r\n                <Text>Birth year : <span>{item.birth_year}</span></Text>\r\n            </SearchResult >\r\n        )\r\n    })\r\n\r\n    let buttonText = \"Add own favorite\";\r\n    if (showForm) {\r\n        buttonText = \"Show results\"\r\n    };\r\n    return (\r\n        <Content>\r\n            <Searchbar>\r\n            <Inputfield onKeyPress={enterKeyPressed} value={searchValue} onChange={e => setSearchValue(e.target.value.toLowerCase())} type=\"text\" placeholder=\"Search for your favourite\" />\r\n            <Buttons onClick={getData}>Search</Buttons>\r\n            <Buttons onClick={() => setShowform(!showForm)} >{buttonText}</Buttons>\r\n            </Searchbar>\r\n            {showForm ?\r\n                <div>\r\n                    <h2>Add a new favourite:</h2>\r\n                    <DisplayContainer>\r\n                        <label htmlFor=\"name\">Name: <br /><input required id=\"name\" type=\"text\" onChange={e => setName(e.target.value)} /></label>\r\n                        <label htmlFor=\"birth\">Birth year: <br /><input required id=\"birth\" type=\"text\" onChange={e => setBirthYear(e.target.value)} /></label>\r\n                        <label htmlFor=\"eye\">Eye color: <br /><input required id=\"eye\" type=\"text\" onChange={e => setEyeColor(e.target.value)} /></label>\r\n                        <Buttons onClick={buildFavorite} disabled={name === \"\" || eye_color === \"\" || birth_year === \"\"} >Add</Buttons>\r\n                    </DisplayContainer>\r\n                </div>\r\n                : <div>\r\n                    {elements}\r\n                </div>}\r\n            {favorite.length > 0 ?\r\n                <div>\r\n                    <h1>Added favourite character</h1>\r\n                    {favorites}\r\n                </div>\r\n                : null}\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default SwapiData;","import React from 'react';\nimport SwapiData from \"./components/SwapiData\";\nimport styled from \"styled-components\";\n\nconst Header = styled.div`\n  background-color: black;\n  min-height: 10vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 40px;\n  color: gold;\n  font-family: 'Bangers', cursive;\n`\nconst Apps = styled.div`\n  text-align: center;\n  \n`\n\n\n \nfunction App() {\n \n  \n  return (\n    <Apps>\n      <Header >\n        <h1>Star Wars API</h1>\n      </Header>\n      <main>\n        <SwapiData />\n      </main>\n    </Apps >\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}